# Docker MCP Stack Environment Configuration
# Copy this file to .env and customize for your platform

# ================================
# PLATFORM DETECTION
# ================================
# This will be auto-detected by the setup script
# DETECTED_OS=linux|windows|macos

# ================================
# SERVICE PORTS
# ================================
MCP_API_PORT=4000
UI_PORT=8501
QDRANT_PORT=6333
QDRANT_GRPC_PORT=6334
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
NGINX_OLLAMA_PORT=11434

# ================================
# MODEL RUNNER SETTINGS
# ================================

# Model Runner Version (pinned for stability)
MODEL_RUNNER_VERSION=v1.8.0

# Model resource limits
MODEL_MEMORY_LIMIT=4g
MODEL_CPU_LIMIT=2

# Model ports (mapped to host)
SMOLLM2_PORT=12434
LLAMA3_PORT=12435
PHI4_PORT=12436
QWEN3_PORT=12437
QWEN2_PORT=12438
MISTRAL_PORT=12439
GEMMA3_PORT=12440
GRANITE7_PORT=12441
GRANITE3_PORT=12442

# GPU settings (comma-separated list of GPU indices to use)
CUDA_DEVICES=0

#
# MCP SERVER SETTINGS
#

# Environment Configuration
ENVIRONMENT=development
DEBUG=false

# CORS Configuration (production only - comma-separated origins)
# CORS_ORIGINS=https://your-domain.com,https://api.your-domain.com

# Data and Logging
DATA_DIR=/data
LOG_LEVEL=INFO

# Monitoring
PROMETHEUS_MULTIPROC_DIR=/tmp
METRICS_PORT=9090

# Worker Configuration
WORKER_CONCURRENCY=4
TASK_TIMEOUT=300

# GitHub integration
GITHUB_TOKEN=your-github-token-here

# GitLab integration
GITLAB_TOKEN=your-gitlab-token-here

# Sentry integration
SENTRY_DSN=your-sentry-dsn-here

#
# DATABASE SETTINGS
#

# PostgreSQL connection details
POSTGRES_DB=mcp
POSTGRES_USER=admin
POSTGRES_PASSWORD=admin
POSTGRES_PORT=5432
POSTGRES_CONNECTION_STRING=postgresql://admin:admin@postgres:5432/mcp

#
# WEB INTERFACE SETTINGS
#

# Nginx ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

#
# MONITORING SETTINGS
#

# Prometheus/Grafana ports
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
LOKI_PORT=3100
ALERTMANAGER_PORT=9093

# Grafana admin credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# Alerting Configuration
SMTP_HOST=localhost:587
SMTP_FROM=alertmanager@mcpai-stack.local
SMTP_USER=
SMTP_PASSWORD=
SLACK_WEBHOOK_URL=

# Alert Recipients
DEFAULT_EMAIL=admin@mcpai-stack.local
CRITICAL_EMAIL=critical@mcpai-stack.local
API_TEAM_EMAIL=api-team@mcpai-stack.local
ML_TEAM_EMAIL=ml-team@mcpai-stack.local
INFRA_TEAM_EMAIL=infra-team@mcpai-stack.local

#
# BACKUP SETTINGS
#

# Number of backups to keep
BACKUP_KEEP=5

#
# DOCKER HUB AUTHENTICATION
#

# Docker Hub credentials for image pulling
DOCKER_HUB_USERNAME=your-dockerhub-username
DOCKER_HUB_TOKEN=your-dockerhub-token

# ================================
# PLATFORM-SPECIFIC RESOURCE LIMITS
# ================================
# Adjust these based on your system and platform

# Default (conservative) limits
MODEL_MEMORY_LIMIT=4g
MODEL_CPU_LIMIT=2
API_MEMORY_LIMIT=1g
API_CPU_LIMIT=1
WORKER_MEMORY_LIMIT=2g
WORKER_CPU_LIMIT=1.5
UI_MEMORY_LIMIT=512m
UI_CPU_LIMIT=0.5

# For Linux (can use more resources)
# MODEL_MEMORY_LIMIT=6g
# MODEL_CPU_LIMIT=3

# For macOS (optimized for Apple Silicon)
# MODEL_MEMORY_LIMIT=8g
# MODEL_CPU_LIMIT=4

# For Windows/WSL2 (conservative limits)
# MODEL_MEMORY_LIMIT=4g
# MODEL_CPU_LIMIT=2

# ================================
# DOCKER PLATFORM
# ================================
# Auto-detected, but can be overridden
# DOCKER_PLATFORM=linux/amd64    # For Linux/Windows
# DOCKER_PLATFORM=linux/arm64    # For Apple Silicon Macs

# ================================
# OLLAMA CONFIGURATION
# ================================
# For containerized model runner (Linux default)
# OLLAMA_BASE_URL=http://model-runner:8080/v1
# MODEL_API_URL=http://model-runner:8080/v1

# For host-based Ollama (Windows/macOS default)
# OLLAMA_BASE_URL=http://host.docker.internal:11434/v1
# MODEL_API_URL=http://host.docker.internal:11434/v1

# ================================
# PLATFORM-SPECIFIC OPTIMIZATIONS
# ================================

# Apple Silicon (macOS) optimizations
# GGML_METAL=1
# GGML_METAL_NDEBUG=1

# Linux optimizations
# OMP_NUM_THREADS=4
# CUDA_VISIBLE_DEVICES=0  # For GPU acceleration

# Windows/WSL2 optimizations
# WSL2_ENABLED=true

# Original model runner settings preserved below:
