# Docker MCP Stack - Environment Variables Example
# Copy this file to .env and customize as needed

#
# MODEL RUNNER SETTINGS
#

# Model Runner Version (pinned for stability)
MODEL_RUNNER_VERSION=v1.8.0

# Model resource limits
MODEL_MEMORY_LIMIT=4g
MODEL_CPU_LIMIT=2

# Model ports (mapped to host)
SMOLLM2_PORT=12434
LLAMA3_PORT=12435
PHI4_PORT=12436
QWEN3_PORT=12437
QWEN2_PORT=12438
MISTRAL_PORT=12439
GEMMA3_PORT=12440
GRANITE7_PORT=12441
GRANITE3_PORT=12442

# GPU settings (comma-separated list of GPU indices to use)
CUDA_DEVICES=0

#
# MCP SERVER SETTINGS
#

# Environment Configuration
ENVIRONMENT=development
DEBUG=false

# CORS Configuration (production only - comma-separated origins)
# CORS_ORIGINS=https://your-domain.com,https://api.your-domain.com

# Data and Logging
DATA_DIR=/data
LOG_LEVEL=INFO

# Monitoring
PROMETHEUS_MULTIPROC_DIR=/tmp
METRICS_PORT=9090

# Worker Configuration
WORKER_CONCURRENCY=4
TASK_TIMEOUT=300

# GitHub integration
GITHUB_TOKEN=your-github-token-here

# GitLab integration
GITLAB_TOKEN=your-gitlab-token-here

# Sentry integration
SENTRY_DSN=your-sentry-dsn-here

#
# DATABASE SETTINGS
#

# PostgreSQL connection details
POSTGRES_DB=mcp
POSTGRES_USER=admin
POSTGRES_PASSWORD=admin
POSTGRES_PORT=5432
POSTGRES_CONNECTION_STRING=postgresql://admin:admin@postgres:5432/mcp

#
# WEB INTERFACE SETTINGS
#

# Nginx ports
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

#
# MONITORING SETTINGS
#

# Prometheus/Grafana ports
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
LOKI_PORT=3100
ALERTMANAGER_PORT=9093

# Grafana admin credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=admin

# Alerting Configuration
SMTP_HOST=localhost:587
SMTP_FROM=alertmanager@mcpai-stack.local
SMTP_USER=
SMTP_PASSWORD=
SLACK_WEBHOOK_URL=

# Alert Recipients
DEFAULT_EMAIL=admin@mcpai-stack.local
CRITICAL_EMAIL=critical@mcpai-stack.local
API_TEAM_EMAIL=api-team@mcpai-stack.local
ML_TEAM_EMAIL=ml-team@mcpai-stack.local
INFRA_TEAM_EMAIL=infra-team@mcpai-stack.local

#
# BACKUP SETTINGS
#

# Number of backups to keep
BACKUP_KEEP=5

#
# DOCKER HUB AUTHENTICATION
#

# Docker Hub credentials for image pulling
DOCKER_HUB_USERNAME=your-dockerhub-username
DOCKER_HUB_TOKEN=your-dockerhub-token
