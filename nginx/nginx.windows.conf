# Docker MCP Stack - Nginx Configuration for Windows/WSL2
# This configuration routes to host-based Ollama instead of containerized model-runner

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Set larger body size for model API requests
    client_max_body_size 10M;

    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Resolver for dynamic upstream
    resolver 127.0.0.11 valid=300s;
    resolver_timeout 10s;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ollama:10m rate=5r/s;

    # Upstream definitions for Windows (host-based services)
    upstream mcp_api {
        server mcp-api:4000;
        keepalive 32;
    }

    upstream streamlit_ui {
        server ui:8501;
        keepalive 32;
    }

    upstream ollama_host {
        server host.docker.internal:11434;
        keepalive 32;
    }

    upstream qdrant {
        server qdrant:6333;
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main proxy server
    server {
        listen 80;
        server_name _;

        # Root redirects to UI
        location / {
            return 301 /ui/;
        }

        # Streamlit UI
        location /ui/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://streamlit_ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # MCP API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://mcp_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Ollama API (proxied to host)
        location /v1/ {
            limit_req zone=ollama burst=10 nodelay;
            
            proxy_pass http://ollama_host/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # Long timeout for model inference
            proxy_buffering off;
        }

        # Qdrant vector database
        location /qdrant/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://qdrant/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Monitoring endpoints (optional)
        location /prometheus/ {
            auth_basic "Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://prometheus:9090/;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Ollama direct access (port 11434)
    server {
        listen 11434;
        server_name _;

        location / {
            limit_req zone=ollama burst=10 nodelay;
            
            proxy_pass http://ollama_host/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
            proxy_buffering off;
        }
    }
}
