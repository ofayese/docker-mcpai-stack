name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/bake-action@v4
        with:
          load: true
          files: ./docker-bake.hcl
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

      - name: Cache models
        id: cache-models
        uses: actions/cache@v4
        with:
          path: ./models
          key: model-runner-${{ hashFiles('.env.models') }}

      - name: Pull models if not cached
        if: steps.cache-models.outputs.cache-hit != 'true'
        run: make pull-models

      - name: Run Tests
        run: |
          docker compose -f compose/compose.yaml -f compose/compose.test.yaml up -d
          docker compose exec -T mcpai-api pytest
          docker compose -f compose/compose.yaml -f compose/compose.test.yaml down

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Docker Scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: mcpai-api:latest
          only-severity:

  matrix-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test on ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            # macOS specific tests (ARM64)
            make test-osx
          else
            # Linux tests
            make test-linux
          fi
